name: Docker image CI

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "master"

jobs:

  tagging:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      new_version: ${{ steps.bump-semver.outputs.new_version }}

    # Copied from https://github.com/fwcd/kotlin-language-server/pull/433
    steps:
    - uses: actions/checkout@v3

    - name: Get latest tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      id: get-latest-tag

    - name: Bump patch tag
      uses: actions-ecosystem/action-bump-semver@v1
      id: bump-semver
      with:
        current_version: ${{ steps.get-latest-tag.outputs.tag }}
        level: patch

    - name: Push new tag
      if: ${{ steps.bump-semver.outputs.new_version != null }}
      uses: actions-ecosystem/action-push-tag@v1
      with:
        tag: ${{ steps.bump-semver.outputs.new_version }}

  build:
    needs: tagging
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Login into GitHub container registry with a personal access token
      run: echo '${{ secrets.PERSONAL_ACCESS_TOKEN_CONTAINER_REGISTRY }}' | docker login ghcr.io -u 'avazhnov-griddynamics' --password-stdin

    - uses: actions/checkout@v3

    - name: Build the Docker image
      run: docker build --file Dockerfile_alpine --tag 'ghcr.io/avazhnov-griddynamics/python-flask-hello:alpine' .

    - name: Tag the Docker image
      run: |
        docker tag 'ghcr.io/avazhnov-griddynamics/python-flask-hello:alpine' 'ghcr.io/avazhnov-griddynamics/python-flask-hello:latest'
        docker tag 'ghcr.io/avazhnov-griddynamics/python-flask-hello:alpine' "ghcr.io/avazhnov-griddynamics/python-flask-hello:${{ needs.tagging.outputs.new_version }}"

    - name: List Docker image(s)
      run: docker images --no-trunc

    - name: Push the Docker image
      run: |
        docker push 'ghcr.io/avazhnov-griddynamics/python-flask-hello:alpine'
        docker push 'ghcr.io/avazhnov-griddynamics/python-flask-hello:latest'
        docker push "ghcr.io/avazhnov-griddynamics/python-flask-hello:${{ needs.tagging.outputs.new_version }}"
